/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/6PcAByNM1I5
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/
import { Avatar, AvatarImage, AvatarFallback } from "@/components/ui/avatar"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { ArrowDownToDotIcon } from "lucide-react"
import { JSX, SVGProps } from "react"
import { ChatSection } from "./chat-section"

const getDataChat = () => {
  return [
    {
      user: 'Florencio Dorrance',
      data: [
        {
          message: 'How are you?'
        },
        {
          message: 'I\'ll be there in 2 mins ðŸ•’'
        }
      ]
    },
    {
      user: 'Satria Tama',
      data: [
        {
          message: 'just ideas for next time lorem'
        },
        {
          message: 'woohoooo'
        },
      ]
    },
    {
      user: 'Florencio Dorrance',
      data: [
        {
          message: 'How are you?'
        },
        {
          message: 'I\'ll be there in 2 mins ðŸ•’'
        }
      ]
    },
    {
      user : 'Satria Tama',
      data: [
        {
          message: 'just ideas for next time lorem'
        },
        {
          message: 'woohoooo'
        },
      ]
    },
    {
      user : 'Florencio Dorrance',
      data: [
        {
          message: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Qui nesciunt amet molestiae aperiam eum. Dolor magnam velit reiciendis, quibusdam nesciunt vitae magni eveniet excepturi, facilis soluta ex deserunt laborum illo?'
        },
        {
          message: 'I\'ll be there in 2 mins ðŸ•’'
        }
      ]
    },
  ];
};

function isLeft(user: string) : boolean{
  return user === 'Florencio Dorrance'
}


export function PersonalChatPage() {
  const data = getDataChat()
  return (
    <div className="flex flex-col w-full bg-gray-300 border rounded-2xl m-2">
      <header className="flex items-center justify-between p-4 bg-white border-b  rounded-2xl">
        <div className="flex items-center space-x-4">
          <Avatar>
            <AvatarImage src="/placeholder-user.jpg" alt="User" />
            <AvatarFallback>FD</AvatarFallback>
          </Avatar>
          <div>
            <h2 className="text-lg font-semibold">Florencio Dorrance</h2>
            <div className="flex items-center space-x-2 text-sm text-green-500">
              <span className="h-2 w-2 bg-green-500 rounded-full" />
              <span>Online</span>
            </div>
          </div>
        </div>
        <Button variant="outline" className="flex items-center space-x-2">
          <ArrowDownToDotIcon className="h-4 w-4" />
          <span>Add Group</span>
        </Button>
      </header>
      <main className="flex-1 p-4 overflow-y-auto scrollbar-hide">
        <div className="space-y-4">
          {getDataChat().map((item, index) => (
            <ChatSection key={index} user={item.user} isLeft={isLeft(item.user)} data={item.data} />
          ))}
        </div>
      </main>
      <footer className="p-4 bg-white border-t rounded-xl">
        <div className="flex items-center space-x-2">
          <PaperclipIcon className="h-6 w-6 text-gray-500" />
          <Input type="text" placeholder="Type a message" className="flex-1" />
          <Button variant="ghost" className="p-2">
            <SendIcon className="h-6 w-6 text-blue-500" />
          </Button>
        </div>
      </footer>
    </div>
  )
}

function PaperclipIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m21.44 11.05-9.19 9.19a6 6 0 0 1-8.49-8.49l8.57-8.57A4 4 0 1 1 18 8.84l-8.59 8.57a2 2 0 0 1-2.83-2.83l8.49-8.48" />
    </svg>
  )
}


function PhoneIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z" />
    </svg>
  )
}


function SendIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m22 2-7 20-4-9-9-4Z" />
      <path d="M22 2 11 13" />
    </svg>
  )
}
